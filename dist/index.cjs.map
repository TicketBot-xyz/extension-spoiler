{"version":3,"file":"index.cjs","sources":["../src/spoiler.ts"],"sourcesContent":["import {\r\n\tMark,\r\n\tmarkInputRule,\r\n\tmarkPasteRule,\r\n\tmergeAttributes,\r\n} from \"@tiptap/core\";\r\n\r\nexport interface SpoilerOptions {\r\n\tHTMLAttributes: Record<string, any>;\r\n}\r\n\r\ndeclare module \"@tiptap/core\" {\r\n\tinterface Commands<ReturnType> {\r\n\t\tspoiler: {\r\n\t\t\t/**\r\n\t\t\t * Set a spoiler mark\r\n\t\t\t */\r\n\t\t\tsetSpoiler: () => ReturnType;\r\n\t\t\t/**\r\n\t\t\t * Toggle a spoiler mark\r\n\t\t\t */\r\n\t\t\ttoggleSpoiler: () => ReturnType;\r\n\t\t\t/**\r\n\t\t\t * Unset a spoiler mark\r\n\t\t\t */\r\n\t\t\tunsetSpoiler: () => ReturnType;\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport const starInputRegex = /(?:^|\\s)((?:\\|\\|)((?:[^*]+))(?:\\|\\|))$/;\r\nexport const starPasteRegex = /(?:^|\\s)((?:\\|\\|)((?:[^*]+))(?:\\|\\|))/g;\r\n\r\nexport const Spoiler = Mark.create<SpoilerOptions>({\r\n\tname: \"spoiler\",\r\n\r\n\taddOptions() {\r\n\t\treturn {\r\n\t\t\tHTMLAttributes: {},\r\n\t\t};\r\n\t},\r\n\r\n\tparseHTML() {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\ttag: `span[data-type=\"${this.name}\"]`,\r\n\t\t\t},\r\n\t\t];\r\n\t},\r\n\r\n\trenderHTML({ HTMLAttributes }) {\r\n\t\treturn [\r\n\t\t\t\"span\",\r\n\t\t\tmergeAttributes(\r\n\t\t\t\t{ \"data-type\": this.name, class: \"spoiler\" },\r\n\t\t\t\tthis.options.HTMLAttributes,\r\n\t\t\t\tHTMLAttributes\r\n\t\t\t),\r\n\t\t\t0,\r\n\t\t];\r\n\t},\r\n\r\n\taddCommands() {\r\n\t\treturn {\r\n\t\t\tsetSpoiler:\r\n\t\t\t\t() =>\r\n\t\t\t\t({ commands }) => {\r\n\t\t\t\t\treturn commands.setMark(this.name);\r\n\t\t\t\t},\r\n\t\t\ttoggleSpoiler:\r\n\t\t\t\t() =>\r\n\t\t\t\t({ commands }) => {\r\n\t\t\t\t\treturn commands.toggleMark(this.name);\r\n\t\t\t\t},\r\n\t\t\tunsetSpoiler:\r\n\t\t\t\t() =>\r\n\t\t\t\t({ commands }) => {\r\n\t\t\t\t\treturn commands.unsetMark(this.name);\r\n\t\t\t\t},\r\n\t\t};\r\n\t},\r\n\r\n\taddKeyboardShortcuts() {\r\n\t\treturn {\r\n\t\t\t\"Mod-l\": () => this.editor.commands.toggleSpoiler(),\r\n\t\t\t\"Mod-L\": () => this.editor.commands.toggleSpoiler(),\r\n\t\t};\r\n\t},\r\n\r\n\taddInputRules() {\r\n\t\treturn [\r\n\t\t\tmarkInputRule({\r\n\t\t\t\tfind: starInputRegex,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t}),\r\n\t\t];\r\n\t},\r\n\r\n\taddPasteRules() {\r\n\t\treturn [\r\n\t\t\tmarkPasteRule({\r\n\t\t\t\tfind: starPasteRegex,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t}),\r\n\t\t];\r\n\t},\r\n});\r\n"],"names":["Mark","mergeAttributes","markInputRule","markPasteRule"],"mappings":";;;;;;AA8BO,MAAM,cAAc,GAAG,yCAAyC;AAChE,MAAM,cAAc,GAAG,yCAAyC;AAE1D,MAAA,OAAO,GAAGA,SAAI,CAAC,MAAM,CAAiB;AAClD,IAAA,IAAI,EAAE,SAAS;IAEf,UAAU,GAAA;QACT,OAAO;AACN,YAAA,cAAc,EAAE,EAAE;SAClB,CAAC;KACF;IAED,SAAS,GAAA;QACR,OAAO;AACN,YAAA;AACC,gBAAA,GAAG,EAAE,CAAA,gBAAA,EAAmB,IAAI,CAAC,IAAI,CAAI,EAAA,CAAA;AACrC,aAAA;SACD,CAAC;KACF;IAED,UAAU,CAAC,EAAE,cAAc,EAAE,EAAA;QAC5B,OAAO;YACN,MAAM;YACNC,oBAAe,CACd,EAAE,WAAW,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,EAC5C,IAAI,CAAC,OAAO,CAAC,cAAc,EAC3B,cAAc,CACd;YACD,CAAC;SACD,CAAC;KACF;IAED,WAAW,GAAA;QACV,OAAO;YACN,UAAU,EACT,MACA,CAAC,EAAE,QAAQ,EAAE,KAAI;gBAChB,OAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnC;YACF,aAAa,EACZ,MACA,CAAC,EAAE,QAAQ,EAAE,KAAI;gBAChB,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACtC;YACF,YAAY,EACX,MACA,CAAC,EAAE,QAAQ,EAAE,KAAI;gBAChB,OAAO,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrC;SACF,CAAC;KACF;IAED,oBAAoB,GAAA;QACnB,OAAO;YACN,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,EAAE;YACnD,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,EAAE;SACnD,CAAC;KACF;IAED,aAAa,GAAA;QACZ,OAAO;AACN,YAAAC,kBAAa,CAAC;AACb,gBAAA,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,IAAI,CAAC,IAAI;aACf,CAAC;SACF,CAAC;KACF;IAED,aAAa,GAAA;QACZ,OAAO;AACN,YAAAC,kBAAa,CAAC;AACb,gBAAA,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,IAAI,CAAC,IAAI;aACf,CAAC;SACF,CAAC;KACF;AACD,CAAA;;;;;;;"}