{"version":3,"file":"index.umd.js","sources":["../src/spoiler.ts"],"sourcesContent":["import {\r\n\tMark,\r\n\tmarkInputRule,\r\n\tmarkPasteRule,\r\n\tmergeAttributes,\r\n} from \"@tiptap/core\";\r\n\r\nexport interface SpoilerOptions {\r\n\tHTMLAttributes: Record<string, any>;\r\n}\r\n\r\ndeclare module \"@tiptap/core\" {\r\n\tinterface Commands<ReturnType> {\r\n\t\tspoiler: {\r\n\t\t\t/**\r\n\t\t\t * Set a spoiler mark\r\n\t\t\t */\r\n\t\t\tsetSpoiler: () => ReturnType;\r\n\t\t\t/**\r\n\t\t\t * Toggle a spoiler mark\r\n\t\t\t */\r\n\t\t\ttoggleSpoiler: () => ReturnType;\r\n\t\t\t/**\r\n\t\t\t * Unset a spoiler mark\r\n\t\t\t */\r\n\t\t\tunsetSpoiler: () => ReturnType;\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport const starInputRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))$/;\r\nexport const starPasteRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))/g;\r\n\r\nexport const Spoiler = Mark.create<SpoilerOptions>({\r\n\tname: \"spoiler\",\r\n\r\n\taddOptions() {\r\n\t\treturn {\r\n\t\t\tHTMLAttributes: {},\r\n\t\t};\r\n\t},\r\n\r\n\tparseHTML() {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\ttag: \"details\",\r\n\t\t\t},\r\n\t\t];\r\n\t},\r\n\r\n\trenderHTML({ HTMLAttributes }) {\r\n\t\treturn [\r\n\t\t\t\"details\",\r\n\t\t\tmergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\r\n\t\t\t0,\r\n\t\t];\r\n\t},\r\n\r\n\taddCommands() {\r\n\t\treturn {\r\n\t\t\tsetSpoiler:\r\n\t\t\t\t() =>\r\n\t\t\t\t({ commands }) => {\r\n\t\t\t\t\treturn commands.setMark(this.name);\r\n\t\t\t\t},\r\n\t\t\ttoggleSpoiler:\r\n\t\t\t\t() =>\r\n\t\t\t\t({ commands }) => {\r\n\t\t\t\t\treturn commands.toggleMark(this.name);\r\n\t\t\t\t},\r\n\t\t\tunsetSpoiler:\r\n\t\t\t\t() =>\r\n\t\t\t\t({ commands }) => {\r\n\t\t\t\t\treturn commands.unsetMark(this.name);\r\n\t\t\t\t},\r\n\t\t};\r\n\t},\r\n\r\n\taddKeyboardShortcuts() {\r\n\t\treturn {\r\n\t\t\t\"Mod-b\": () => this.editor.commands.toggleSpoiler(),\r\n\t\t\t\"Mod-B\": () => this.editor.commands.toggleSpoiler(),\r\n\t\t};\r\n\t},\r\n\r\n\taddInputRules() {\r\n\t\treturn [\r\n\t\t\tmarkInputRule({\r\n\t\t\t\tfind: starInputRegex,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t}),\r\n\t\t];\r\n\t},\r\n\r\n\taddPasteRules() {\r\n\t\treturn [\r\n\t\t\tmarkPasteRule({\r\n\t\t\t\tfind: starPasteRegex,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t}),\r\n\t\t];\r\n\t},\r\n});\r\n"],"names":["Mark","mergeAttributes","markInputRule","markPasteRule"],"mappings":";;;;;;AA8BO,OAAM,cAAc,GAAG,yCAAyC;AAChE,OAAM,cAAc,GAAG,yCAAyC;AAE1D,OAAA,OAAO,GAAGA,SAAI,CAAC,MAAM,CAAiB;CAClD,IAAA,IAAI,EAAE,SAAS;KAEf,UAAU,GAAA;SACT,OAAO;CACN,YAAA,cAAc,EAAE,EAAE;UAClB,CAAC;MACF;KAED,SAAS,GAAA;SACR,OAAO;CACN,YAAA;CACC,gBAAA,GAAG,EAAE,SAAS;CACd,aAAA;UACD,CAAC;MACF;KAED,UAAU,CAAC,EAAE,cAAc,EAAE,EAAA;SAC5B,OAAO;aACN,SAAS;aACTC,oBAAe,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC;aAC5D,CAAC;UACD,CAAC;MACF;KAED,WAAW,GAAA;SACV,OAAO;aACN,UAAU,EACT,MACA,CAAC,EAAE,QAAQ,EAAE,KAAI;iBAChB,OAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;cACnC;aACF,aAAa,EACZ,MACA,CAAC,EAAE,QAAQ,EAAE,KAAI;iBAChB,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;cACtC;aACF,YAAY,EACX,MACA,CAAC,EAAE,QAAQ,EAAE,KAAI;iBAChB,OAAO,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;cACrC;UACF,CAAC;MACF;KAED,oBAAoB,GAAA;SACnB,OAAO;aACN,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,EAAE;aACnD,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,EAAE;UACnD,CAAC;MACF;KAED,aAAa,GAAA;SACZ,OAAO;CACN,YAAAC,kBAAa,CAAC;CACb,gBAAA,IAAI,EAAE,cAAc;iBACpB,IAAI,EAAE,IAAI,CAAC,IAAI;cACf,CAAC;UACF,CAAC;MACF;KAED,aAAa,GAAA;SACZ,OAAO;CACN,YAAAC,kBAAa,CAAC;CACb,gBAAA,IAAI,EAAE,cAAc;iBACpB,IAAI,EAAE,IAAI,CAAC,IAAI;cACf,CAAC;UACF,CAAC;MACF;CACD,CAAA;;;;;;;;;;;;;"}